name: Release

on:
  push:
    tags:
      - '*'
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Install zip
        run: sudo apt-get install zip

      - name: Build binaries
        run: make release

      - name: Archive binaries
        run: |
          mkdir -p release
          mv bin/*.tgz release/
          mv bin/*.zip release/

      - name: Read Version from File
        id: read_version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: "Release ${{ env.VERSION }}"
          draft: false
          prerelease: false
        run: echo "UPLOAD_URL=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV

      - name: Upload Linux and macOS Binaries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UPLOAD_URL: ${{ env.UPLOAD_URL }}
        run: |
          for file in release/*.tgz; do
            curl -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -F "file=@$file" \
              "${UPLOAD_URL}?name=$(basename $file)"
          done

      - name: Upload Windows Binaries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UPLOAD_URL: ${{ env.UPLOAD_URL }}
        run: |
          for file in release/*.zip; do
            curl -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -F "file=@$file" \
              "${UPLOAD_URL}?name=$(basename $file)"
          done